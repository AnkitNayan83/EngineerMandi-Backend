name: CI/CD Pipeline

on:
    push:
        branches:
            - main # Run the pipeline on pushes to the main branch
    pull_request:
        branches:
            - main # Run the pipeline on pull requests to the main branch
jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.22.0

            - name: Cache Go modules
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/go-build
                      ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: go mod download

            - name: Run tests
              run: go test -v ./...

            - name: Build the application
              run: go build -v -o ./bin/engineermandi-backend ./main.go

            - name: Archive production artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: go-binaries
                  path: ./bin/engineermandi-backend
    docker:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Download build artifact
              uses: actions/download-artifact@v3
              with:
                  name: go-binaries

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Github Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GHCR_PAT }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: |
                      ghcr.io/ankitnayan83/engineermandi-backend:latest
                      ghcr.io/ankitnayan83/engineermandi-backend:${{ github.sha }}

    deploy:
        runs-on: ubuntu-latest
        needs: docker

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Deploy to production
              env:
                  EC2_HOST: ${{ secrets.EC2_HOST}}
                  EC2_USER: ${{ secrets.EC2_USER }}
                  EC2_SSH_KEY: ${{ secrets.EC2_KEY }}
                  DOCKER_IMAGE: ghcr.io/ankitnayan83/engineermandi-backend:latest
              run: |
                  echo "Deploying to production..."

                  sudo apt-get update
                  sudo apt-get install -y ssh

                  mkdir -p ~/.ssh

                  # save private key to ec2_key.pem
                  echo "$EC2_SSH_KEY" > ec2_key.pem
                  chmod 600 ec2_key.pem

                  ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

                  ssh -i ec2_key.pem ${EC2_USER}@${EC2_HOST} << 'EOF'

                      # update package index
                      sudo yum update -y

                      # install docker if not already installed
                      if ! command -v docker &> /dev/null
                      then
                          echo "Docker not found. Installing Docker..."
                          sudo yum install -y docker
                          sudo systemctl start docker
                          sudo systemctl enable docker
                      fi

                      # ensure docker daemon is running
                      sudo systemctl start docker

                      # add user to docker group to avoid permissin issues
                      sudo usermod -aG docker ${EC2_USER}

                      # stop the old container if it exists
                      docker stop engineermandi-backend || true
                      docker rm engineermandi-backend || true

                      # pull the latest image
                      sudo docker pull $DOCKER_IMAGE

                      # run the new container
                      sudo docker run -d -p 80:80 --name engineermandi-backend $DOCKER_IMAGE
                  EOF
